{"version":3,"sources":["components/conversor.js","App.js","reportWebVitals.js","index.js"],"names":["Conversor","props","state","moedaA_valor","moedaB_valor","converter","bind","de_para","this","moedaA","moedaB","url","fetch","then","res","json","cotacao","parseFloat","toFixed","setState","className","type","onChange","event","target","value","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGqBA,G,wDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,aAAc,GACdC,aAAc,GAGlB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBARF,E,wDAYP,IAAD,OAEHC,EAAO,UAAMC,KAAKP,MAAMQ,OAAjB,YAA2BD,KAAKP,MAAMS,QAE7CC,EAAG,qDAAiDJ,EAAjD,8CAEPK,MAAMD,GACLE,MAAK,SAAAC,GAEF,OAAOA,EAAIC,UAEdF,MAAK,SAAAE,GACF,IAAIC,EAAUD,EAAKR,GACfH,GAAgBa,WAAW,EAAKf,MAAMC,cAAgBa,GAASE,QAAQ,GAC3E,EAAKC,SAAS,CAACf,sB,+BAGb,IAAD,OACL,OACI,sBAAKgB,UAAU,YAAf,UACI,mCAAMZ,KAAKP,MAAMQ,OAAjB,SAA+BD,KAAKP,MAAMS,OAA1C,OACA,uBAAOW,KAAK,OAAOC,SAAU,SAACC,GAAU,EAAKJ,SAAS,CAAChB,aAAaoB,EAAMC,OAAOC,WACjF,wBAAQL,UAAU,MAAMC,KAAK,SAASI,MAAM,YAAYC,QAAUlB,KAAKH,UAAvE,uBACA,6BAAKG,KAAKN,MAAME,sB,GArCOuB,cC6BxBC,G,6KA3Bf,OACA,sBAAKR,UAAU,MAAf,UACA,qDACA,sBAAKA,UAAU,SAAf,UACG,qBAAKA,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,UAElC,qBAAKU,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,UAElC,qBAAKU,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,UAElC,qBAAKU,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,UAElC,qBAAKU,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,UAElC,qBAAKU,UAAU,MAAf,SACG,cAAC,EAAD,CAAWX,OAAO,MAAMC,OAAO,oB,GAtBnBiB,cCSHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b3800ef6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './conversor.css';\r\n\r\nexport default class Conversor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            moedaA_valor: \"\",\r\n            moedaB_valor: 0,\r\n        }\r\n\r\n        this.converter = this.converter.bind(this);\r\n\r\n    }\r\n\r\n    converter(){\r\n\r\n        let de_para = `${this.props.moedaA}_${this.props.moedaB}`;\r\n\r\n        let url = `https://free.currconv.com/api/v7/convert?q=${de_para}&compact=ultra&apiKey=faf6f698a6054d3b4861`\r\n\r\n        fetch(url)\r\n        .then(res => {\r\n\r\n            return res.json()\r\n        })\r\n        .then(json => {\r\n            let cotacao = json[de_para];\r\n            let moedaB_valor = (parseFloat(this.state.moedaA_valor) * cotacao).toFixed(2)\r\n            this.setState({moedaB_valor})\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"conversor\">\r\n                <h2> {this.props.moedaA} para {this.props.moedaB} </h2>\r\n                <input type=\"text\" onChange={(event) =>{this.setState({moedaA_valor:event.target.value})}} />\r\n                <button className=\"btn\" type=\"button\" value=\"Converter\" onClick= {this.converter}>Converter</button>\r\n                <h2>{this.state.moedaB_valor}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport Conversor from \"./components/conversor\";\nimport './App.css';\nclass App extends Component {\nrender(){\nreturn(\n<div className=\"App\">\n<h1>Conversor de Moedas</h1>\n<div className=\"boxAll\">\n   <div className=\"box\">\n      <Conversor moedaA=\"USD\" moedaB=\"BRL\"/>\n   </div>\n   <div className=\"box\">\n      <Conversor moedaA=\"BRL\" moedaB=\"USD\"/>\n   </div>\n   <div className=\"box\">\n      <Conversor moedaA=\"CAD\" moedaB=\"BRL\"/>\n   </div>\n   <div className=\"box\">\n      <Conversor moedaA=\"BRL\" moedaB=\"CAD\"/>\n   </div>\n   <div className=\"box\">\n      <Conversor moedaA=\"EUR\" moedaB=\"BRL\"/>\n   </div>\n   <div className=\"box\">\n      <Conversor moedaA=\"BRL\" moedaB=\"EUR\"/>\n   </div>\n   </div>\n</div>\n)\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}